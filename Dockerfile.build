# This is an example of a Dockerfile that uses a multi-stage build so that SDKs and other build dependencies do not
# increase the final runtime image size


# THIS IS THE CONTIANER FOR BUILDING FROM SOURCE CODE

FROM mcr.microsoft.com/azure-functions/node:3.0 AS build-env
RUN wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
 dpkg -i packages-microsoft-prod.deb
RUN ls -rlth 
 
# Install librdkafka from Confluent
RUN apt-get update && apt-get install -y \
 wget \
 gnupg \
 apt-transport-https \
 dotnet-sdk-3.1 \
 && wget -qO - https://packages.confluent.io/deb/5.2/archive.key | apt-key add - \
 && apt-get install -y software-properties-common \
 && add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.2 stable main" \
 && add-apt-repository "deb http://security.debian.org/debian-security jessie/updates main" \
 && apt-get update && apt install -y librdkafka-dev \
 && apt-get autoremove -y \
 && apt-get clean -y \
 && rm -rf /var/lib/apt/lists/*
 
WORKDIR /home/site/wwwroot
COPY . /home/site/wwwroot
RUN npm i -g azure-functions-core-tools@core --unsafe-perm true && \
 func extensions install
RUN ls -rlth 
 
ENV AzureWebJobsScriptRoot=/home/site/wwwroot \
 AzureFunctionsJobHost__Logging__Console__IsEnabled=true
 
RUN cd /home/site/wwwroot && npm install
RUN cd /home/site/wwwroot && npm run build
RUN rm -rf /home/site/wwwroot/node_modules/azure-functions-core-tools


## THIS IS THE RUNTIME CONTAINER

FROM mcr.microsoft.com/azure-functions/node:3.0 AS run-env

# Install librdkafka from Confluent
RUN apt-get update && apt-get install -y wget gnupg apt-transport-https \
    && wget -qO - https://packages.confluent.io/deb/5.2/archive.key | apt-key add - \
    && apt-get install -y software-properties-common \
    && add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/5.2 stable main" \
    && add-apt-repository "deb http://security.debian.org/debian-security jessie/updates main" \
    && apt-get update && apt install -y librdkafka-dev \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

## COPY ARTIFACTS FROM BUILD LAYER
FROM run-env
COPY --from=build-env /home/site/wwwroot /home/site/wwwroot

## SET ENV VARS AND DOWNLOAD DEPENDENCIES
ENV AzureWebJobsScriptRoot=/home/site/wwwroot AzureFunctionsJobHost__Logging__Console__IsEnabled=true
RUN cd /home/site/wwwroot && npm install
